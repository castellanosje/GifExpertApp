{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","placeholder","onChange","target","getGifs","category","a","query","fetch","resp","json","data","gifs","map","gif","id","title","url","images","original","GifGridItem","className","src","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","el","i","toString","rootNode","document","getElementById","ReactDOM","render"],"mappings":"iNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAc9C,OACQ,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAc,aACdC,SAlBU,SAACR,GACvBF,EAAcE,EAAES,OAAOH,a,+BCLlBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACP,wCACNC,EAAQF,EACA,IACC,mCAJI,SAKAG,MAAM,GAAD,OAJZ,wCAIY,mBADT,mCACS,cAA8BD,EAA9B,kBAFV,MAHK,cAKbE,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,SAASF,QAbd,kBAiBZL,GAjBY,4CAAH,sDCAPQ,EAAc,SAAC,GAAsB,IAArBL,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKI,UAAU,2DAAf,UACI,qBAAKC,IAAKL,EAAKD,MAAOA,EAAOD,GAAIA,IACjC,4BAAIC,QCAHO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAa,IAAD,EACXf,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAXAC,qBAAU,WACNvB,EAAQC,GACPuB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,IAEIC,EDZ0BK,CAAazB,GAAjCa,EAFwB,EAE7BP,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAMnB,IAELmB,GAAW,mBAAGH,UAAU,iBAAb,wBAEZ,qBAAKA,UAAU,WAAf,SAEIH,EAAOL,KAAI,SAAAkB,GACP,OAAO,wBAAC,EAAD,2BAAiBA,GAAjB,IAAuBC,IAAKD,EAAIhB,eEgB5CkB,EA9BM,SAAC,GAAa,eAAD,MAEK3C,mBAAS,CAAC,cAFf,mBAExBQ,EAFwB,KAEZT,EAFY,KAY9B,OACY,qCACI,8CACA,cAAC,EAAD,CACIA,cAAkBA,IAEtB,uBAGIS,EAAWe,KAAI,SAACqB,EAAGC,GACf,OAAQ,cAAC,EAAD,CAAS9B,SAAY6B,GAAWA,EAAGE,mBCrBjEC,G,MAAWC,SAASC,eAAe,SACzCC,IAASC,OACL,cAAC,EAAD,IACAJ,K","file":"static/js/main.21b59260.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ( {setCategories} ) => {\n    const [inputValue, setInputValue] = useState('');   \n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    };\n\n    const handlesubmit = (e) =>{\n        e.preventDefault();\n        if( inputValue.trim().length > 1){\n            setCategories(categories => [inputValue,...categories]);\n            setInputValue('');\n        }\n    };\n\n    return (\n            <form onSubmit = {handlesubmit}>\n                <input \n                    type=\"text\"\n                    value={inputValue}\n                    placeholder = \"Hola mundo\"\n                    onChange={ handleInputChange }\n                />\n            </form>\n        );\n}\n\nAddCategory.propTypes = { \n    setCategories: PropTypes.func.isRequired\n}","import React from 'react';\n\nexport const getGifs = async (category) =>{\n    const url = \"https://api.giphy.com/v1/gifs/search?\";\n    const query = category;\n    const limit = \"5\";\n    const apiKey = \"EfDOLlnpramCKIbbsr3Da2liVucCc6a9\";\n    const resp = await fetch(`${url}api_key=${apiKey}&q=${query}&limit=${limit}`);\n    const { data } = await resp.json();\n    \n    const gifs = data.map(gif => {\n        \n        return {\n            id:gif.id,\n            title: gif.title,\n            url: gif.images.original.url\n        }\n\n    });\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated  animate__fadeIn animate__delay-s\">\n            <img src={url} title={title} id={id}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ({ category }) => {\n    \n    const { data:images, loading } = useFetchGifs(category);\n  \n    return (\n        <>\n            <h3>{ category }</h3>\n\n            {loading && <p className=\"animate__flash\">Loading...</p>}\n\n            <div className=\"cardGrid\">\n            {\n                images.map(img => {\n                    return <GifGridItem {...img}  key={img.id}/>\n                })\n            }\n            </div>\n        </>\n        \n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/GetGifs\";\n\nexport const useFetchGifs = (category) =>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n        .then( imgs =>{\n            setState({\n                data: imgs,\n                loading: false\n            });\n        });\n\n    }, [ ]);\n    \n    return state; //{ data:[], loading:true  }\n    \n}","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\n\nconst GifExpertApp = ({/*val*/})=>{\n    //const categories =['One punch', 'Samurai X', 'Dragon Ball'];\n   const [categories, setCategories] = useState(['One punch']);\n\n/*\n    const handleAdd=()=>{\n        setCategories([...categories,'yo']);\n        //setCategories(prevState => [...prevState, 'yo']);\n    }\n*/\n    \n\n    return  (\n                <>\n                    <h2>GifExpertApp</h2>\n                    <AddCategory \n                        setCategories = { setCategories }\n                    />\n                    <hr/>\n                    \n                    {\n                        categories.map((el,i) => {\n                            return (<GifGrid category = {el} key = {el.toString()} />);\n                        })\n                     }\n                    \n                </>\n            );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  GifExpertApp  from \"./components/GifExpertApp\";\n\nimport './index.css';\n\nconst rootNode = document.getElementById('root');\nReactDOM.render(\n    <GifExpertApp />,\n    rootNode\n);\n\n// gifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr/>\n\n"],"sourceRoot":""}